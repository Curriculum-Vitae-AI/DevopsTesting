name: Pull-Request jobs

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  commit-lint:
    name: Conventional Commits validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Validate commit messages
        id: commit-validation
        run: |

          PR_NUMBER=${{ github.event.pull_request.number }}
          REPO=${{ github.repository }}
          TOKEN=${{ secrets.GITHUB_TOKEN }}

          types=("build" "chore" "ci" "docs" "feat" "fix" "perf" "refactor" "revert" "style" "test")
          
          commits=$(curl -s -H "Authorization: token $TOKEN" \
            "https://api.github.com/repos/$REPO/pulls/$PR_NUMBER/commits" \
            | jq -r '.[].commit.message')
          
          isValid = true

          # TO REMOVE
          echo commits

          for commit in $commits; do
            type=$(echo "$commit" | cut -d': ' -f1)
            message=$(echo "$commit" | cut -d': ' -f2-)

            if [[ ! " ${types[@]} " =~ " ${type} " ]]; then
              echo "Commit type is invalid for commit: $commit"
              isValid = false
            fi

            if [[ ! $message =~ ^[a-z ]{1,49}$ ]]; then
              echo "Commit message is not in lowercase or length is greater than 50."
              isValid = false
            fi
            
          done

      - name: Comment on PR if commit messages are invalid
        if: env.isValid == 'false'
        uses: actions/github-script@v6
        with:
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `**Conventional Commits**\n\nAll commits should follow Conventional Commits convention.\n\nPlease refer to: https://www.conventionalcommits.org/en/v1.0.0/`
            });
